(as.numeric(mapvald$PUEBLOS_IN)/mapvald$TOTAL_PERS) * 100
class(mapvald$VIV_PARED_)
str_csr(mapvald) = 4326
str_crs(mapvald) = 4326
st_crs(mapvald) = 4326
st_transform(mapvald) = 4326
shp = "C:\\Users\\dgcal\\Documents\\AAAACTUAL\\Msc\\Tesis\\Datos\\Valdivia"
sfdata = st_read(shp)
st_crs(mapvald) = 4326
utm_data = st_transform(mapvald, 32719)
head(utm_data)
st_crs(sfdata) = 4326
utm_data = st_transform(sfdata, 32719)
head(utm_data)
View(utm_data)
View(utm_data[[56]][[1]])
View(sfdata)
library(rgeos)
test<-sf::st_transform(mapvald, crs=4326)
View(test)
library(leafsync)
crsuggest::suggest_crs(mapvald, type = "projected")
install.packages("crsuggest")
crsuggest::suggest_crs(mapvald, type = "projected")
#crsuggest::suggest_crs(mapvald, type = "projected")
test<-mapvald%>%
sf::st_transform(4326)%>%
sf::st_buffer(50)
#crsuggest::suggest_crs(mapvald, type = "projected")
test<-mapvald%>%
sf::st_transform(4326)%>%
sf::st_buffer(10)
#crsuggest::suggest_crs(mapvald, type = "projected")
test<-mapvald%>%
sf::st_transform(5683)%>%
sf::st_buffer(10)
leafsync::latticeview(mapview::mapview(mapvald),
mapview::mapview(test))
pkgs = c("ggplot2","sf","dplyr","cartography","leaflet","rgdal","raster","tmap", "tibble")
lapply(pkgs, require, character.only = TRUE)
shp = "C:\\Users\\dgcal\\Documents\\AAAACTUAL\\Msc\\Tesis\\Datos\\Valdivia"
sfdata = read_sf(shp)
mapvald<-filter(sfdata, COMUNA == "VALDIVIA")
plot(mapvald)
mapvald<-mapvald%>%
mutate(PERSONAS_E = na_if(PERSONAS_E, "Indeterminado"))
mapvald$porcentaje_migr <-
(as.numeric(mapvald$PERSONAS_E)/mapvald$TOTAL_PERS) * 100
mapvald<-mapvald%>%
mutate(PUEBLOS_IN = na_if(PUEBLOS_IN, "Indeterminado"))
mapvald$porcentaje_ind <-
(as.numeric(mapvald$PUEBLOS_IN)/mapvald$TOTAL_PERS) * 100
mapvald<-mapvald%>%
mutate(PUEBLOS_IN = na_if(PUEBLOS_IN, "Indeterminado"))
mapvald$porcentaje_ind <-
(as.numeric(mapvald$PUEBLOS_IN)/mapvald$TOTAL_PERS) * 100
#crsuggest::suggest_crs(mapvald, type = "projected")
test<-mapvald%>%
sf::st_transform(5683)%>%
sf::st_buffer(10)
leafsync::latticeview(mapview::mapview(mapvald),
mapview::mapview(test))
#crsuggest::suggest_crs(mapvald, type = "projected")
test<-mapvald%>%
#sf::st_transform(5683)%>%
sf::st_buffer(50)
leafsync::latticeview(mapview::mapview(mapvald),
mapview::mapview(test))
leafsync::latticeview(mapview::mapview(mapvald),
mapview::mapview(test))
#crsuggest::suggest_crs(mapvald, type = "projected")
test<-mapvald%>%
#sf::st_transform(5683)%>%
sf::st_buffer(100)
mapvald<-filter(sfdata, COMUNA == "VALDIVIA")
plot(mapvald)
mapvald<-mapvald%>%
mutate(PERSONAS_E = na_if(PERSONAS_E, "Indeterminado"))
mapvald$porcentaje_migr <-
(as.numeric(mapvald$PERSONAS_E)/mapvald$TOTAL_PERS) * 100
mapvald<-mapvald%>%
mutate(PUEBLOS_IN = na_if(PUEBLOS_IN, "Indeterminado"))
mapvald$porcentaje_ind <-
(as.numeric(mapvald$PUEBLOS_IN)/mapvald$TOTAL_PERS) * 100
mapvald<-mapvald%>%
mutate(PUEBLOS_IN = na_if(PUEBLOS_IN, "Indeterminado"))
mapvald$porcentaje_ind <-
(as.numeric(mapvald$PUEBLOS_IN)/mapvald$TOTAL_PERS) * 100
#crsuggest::suggest_crs(mapvald, type = "projected")
test<-mapvald%>%
#sf::st_transform(5683)%>%
sf::st_buffer(100)
leafsync::latticeview(mapview::mapview(mapvald),
mapview::mapview(test))
#crsuggest::suggest_crs(mapvald, type = "projected")
test<-mapvald%>%
#sf::st_transform(5683)%>%
sf::st_buffer(200)
leafsync::latticeview(mapview::mapview(mapvald),
mapview::mapview(test))
#crsuggest::suggest_crs(mapvald, type = "projected")
test<-mapvald%>%
#sf::st_transform(5683)%>%
sf::st_buffer(10)
leafsync::latticeview(mapview::mapview(mapvald),
mapview::mapview(test))
leafsync::latticeview(mapview::mapview(mapvald),
mapview::mapview(test))
pkgs = c("ggplot2","sf","dplyr","cartography","leaflet","rgdal","raster","tmap", "tibble")
lapply(pkgs, require, character.only = TRUE)
shp = "C:\\Users\\dgcal\\Documents\\AAAACTUAL\\Msc\\Tesis\\Datos\\Valdivia"
sfdata = read_sf(shp)
mapvald<-filter(sfdata, COMUNA == "VALDIVIA")
plot(mapvald)
mapvald<-mapvald%>%
mutate(PERSONAS_E = na_if(PERSONAS_E, "Indeterminado"))
mapvald$porcentaje_migr <-
(as.numeric(mapvald$PERSONAS_E)/mapvald$TOTAL_PERS) * 100
mapvald<-mapvald%>%
mutate(PUEBLOS_IN = na_if(PUEBLOS_IN, "Indeterminado"))
mapvald$porcentaje_ind <-
(as.numeric(mapvald$PUEBLOS_IN)/mapvald$TOTAL_PERS) * 100
#crsuggest::suggest_crs(mapvald, type = "projected")
test<-mapvald%>%
#sf::st_transform(5683)%>%
sf::st_buffer(10)
#crsuggest::suggest_crs(mapvald, type = "projected")
test<-mapvald%>%
#sf::st_transform(5683)%>%
sf::st_buffer(100)
leafsync::latticeview(mapview::mapview(mapvald),
mapview::mapview(test))
library(terra)
install.packages("Kendall")
library(Kendall)
imagen<-list.files(pattern='*.tif', full.names=TRUE)
ndvi<-brick(stack(imagen))
imagen<-list.files(pattern='*.tif', full.names=TRUE)
ndvis<-brick(stack(imagen))
imagen
imagen<-list.files(pattern='*.tif', full.names=TRUE)
ndvis<-brick(stack(imagen))
plot(ndvis)
pkgs = c("ggplot2","sf","dplyr","cartography","leaflet","rgdal","raster","tmap", "tibble", "terra", "Kendall")
lapply(pkgs, require, character.only = TRUE)
shp = "C:\\Users\\dgcal\\Documents\\AAAACTUAL\\Msc\\Tesis\\Datos\\Valdivia"
sfdata = read_sf(shp)
mapvald<-filter(sfdata, COMUNA == "VALDIVIA")
mapvald<-mapvald%>%
mutate(PERSONAS_E = na_if(PERSONAS_E, "Indeterminado"))
mapvald$porcentaje_migr <-
(as.numeric(mapvald$PERSONAS_E)/mapvald$TOTAL_PERS) * 100
mapvald<-mapvald%>%
mutate(PUEBLOS_IN = na_if(PUEBLOS_IN, "Indeterminado"))
shp = "C:\\Users\\dgcal\\Documents\\AAAACTUAL\\Msc\\Tesis\\Datos\\Valdivia"
sfdata = read_sf(shp)
mapvald<-filter(sfdata, COMUNA == "VALDIVIA")
mapvald100<-mapvald%>%
sf::st_buffer(100)
st_write(mapvald, "mapvald.shp", driver = "ESRI Shapefile")
leafsync::latticeview(mapview::mapview(mapvald),
mapview::mapview(mapvald100))
#Se ve bien el buffer
#Seguimos
imagen<-list.files(pattern='*.tif', full.names=TRUE)
bandassep<-brick(stack(imagen)) #esto es por si quiero que el raster tenga hartas capas, por ejemplo, por fecha
plot(bandassep)
ndvi<-(bandassep$B5-bandassep$B4)/(bandassep$B5+bandassep$B4)
plot(ndvi,
main="NDVI Valdivia y Niebla - Septiembre 2020")
r = crop(ndvi, mapvald)
#they do not overlap, so...
crs(ndvi)
crs(mapvald)
#they do not overlap, so...
crs(ndvi)
crs(mapvald)
test<-spTransform(mapvald, crs("EPSG:32719"))
test<-rgdal::spTransform(mapvald, crs("EPSG:32718"))
test<-rgdal::spTransform(mapvald, crs("EPSG:32718"))
test<- spTransform(mapvald, crs(ndvi))
test<- raster::spTransform(mapvald, crs(ndvi))
test<- sp::spTransform(mapvald, crs(ndvi))
pkgs = c("ggplot2","sf","dplyr","cartography","leaflet","rgdal","raster","tmap", "tibble", "terra")
lapply(pkgs, require, character.only = TRUE)
setwd("C:\\Users\\dgcal\\Documents\\Github\\avu_valdivia")
mapvald = st_read("mapvald.shp")
mapvald100 = st_read("mapvald100.shp")
mapvald<-mapvald%>%
mutate(PERSONAS_E = na_if(PERSONAS_E, "Indeterminado"))
mapvald$porcentaje_migr <-
(as.numeric(mapvald$PERSONAS_E)/mapvald$TOTAL_P) * 100
mapvald<-mapvald%>%
mutate(PUEBLOS = na_if(PUEBLOS, "Indeterminado"))
mapvald$porcentaje_ind <-
(as.numeric(mapvald$PUEBLOS)/mapvald$TOTAL_P) * 100
leafsync::latticeview(mapview::mapview(mapvald),
mapview::mapview(mapvald100))
#Se ve bien el buffer
#Seguimos
imagen<-list.files(pattern='*.tif', full.names=TRUE)
bandassep<-brick(stack(imagen)) #esto es por si quiero que el raster tenga hartas capas, por ejemplo, por fecha
plot(bandassep)
ndvi<-(bandassep$B5-bandassep$B4)/(bandassep$B5+bandassep$B4)
plot(ndvi,
main="NDVI Valdivia y Niebla - Septiembre 2020")
hist(ndvi,
main = "NDVI: DistribuciÃ³n de los pixeles VALDIVIA/NIEBLA Sept 2020",
col = "springgreen",
xlab = "valores del NDVI")
crs(mapvald)
crs(ndvi)
test<- sp::spTransform(mapvald, crs(ndvi)) #32718
test<- spTransform(mapvald, crs(ndvi)) #32718
test<- sf::spTransform(mapvald, crs(ndvi)) #32718
test<- sp::spTransform(mapvald, crs(ndvi)) #32718
class(mapvald)
test<- st_transform(mapvald, crs(ndvi)) #32718
r = crop(ndvi, mapvald)
setwd("C:\\Users\\dgcal\\Documents\\Github\\avu_valdivia")
mapvald = st_read("mapvald.shp")
mapvald100 = st_read("mapvald100.shp")
#o
mapvald100<-mapvald%>%
sf::st_buffer(100)
st_write(mapvald100, "mapvald100.shp", driver = "ESRI Shapefile")
mapvald<-mapvald%>%
mutate(PERSONAS_E = na_if(PERSONAS_E, "Indeterminado"))
mapvald$porcentaje_migr <-
(as.numeric(mapvald$PERSONAS_E)/mapvald$TOTAL_P) * 100
mapvald<-mapvald%>%
mutate(PUEBLOS = na_if(PUEBLOS, "Indeterminado"))
mapvald$porcentaje_ind <-
(as.numeric(mapvald$PUEBLOS)/mapvald$TOTAL_P) * 100
mapvald100<-mapvald%>%
sf::st_buffer(100)
#st_write(mapvald100, "mapvald100.shp", driver = "ESRI Shapefile")
leafsync::latticeview(mapview::mapview(mapvald),
mapview::mapview(mapvald100))
#Se ve bien el buffer
#Seguimos
r = crop(ndvi, mapvald)
#they do not overlap, so...
crs(mapvald100)
crs(ndvi)
#it ha
crs(test)
sr<-"proj=utm + zone = 15 + ellps=GRS80 + datum=WGS84 + units=m"
#test<- st_transform(mapvald, crs(ndvi)) #32718
sr<-"proj=utm + zone = 15 + ellps=GRS80 + datum=WGS84 + units=m"
#test<- st_transform(mapvald, crs(ndvi)) #32718
test<-ndvi(r, crs=sr)
sr<-"proj=utm + zone = 15 + ellps=GRS80 + datum=WGS84 + units=m"
#test<- st_transform(mapvald, crs(ndvi)) #32718
test<-projectRaster(ndvi, crs=sr)
sr<-"proj=utm + zone = 15 + ellps=GRS80 + datum=WGS84 + units=m"
#test<- st_transform(mapvald, crs(ndvi)) #32718
test<-projectRaster(ndvi, crs = "sr")
sr<-"proj=utm + zone = 15 + ellps=GRS80 + datum=WGS84 + units=m"
#test<- st_transform(mapvald, crs(ndvi)) #32718
test<-projectRaster(ndvi, crs = "+init+epsg:32718")
test<-raster::projectRaster(ndvi, crs = "+init+epsg:32718")
#sr<-"proj=utm + zone = 15 + ellps=GRS80 + datum=WGS84 + units=m"
test<- st_transform(mapvald, crs=32718) #32718
crs(test)
r = crop(mapvald,test)
r = crop(test,mapvald100)
r = raster::crop(test,mapvald100)
r = crop(test,extent(mapvald100))
r = sf::crop(test,extent(mapvald100))
r = crop(test,extent(mapvald100))
r = crop(ndvi,extent(test))
test2<- st_transform(ndvi, crs=32718)
test2<- projectRaster(ndvi, crs=32718)
r = crop(test2,extent(test))
View(r)
plot(r)
r2 = mask(r, test)
plot(r2)
mapvald100<- st_transform(mapvald100, crs=32718) #32718
ndvi<- projectRaster(ndvi, crs=32718)
r = crop(ndvi,extent(mapvald100))
r2 = mask(r, mapvald100)
plot(r2)
#sr<-"proj=utm + zone = 15 + ellps=GRS80 + datum=WGS84 + units=m"
test<- st_transform(mapvald, crs=32718) #32718
test2<- projectRaster(ndvi, crs=32718)
r = crop(test2,extent(test))
r2 = mask(r, test)
plot(r2)
#funcionÃ³!!!
mapvald100<- st_transform(mapvald100, crs=32718) #32718
ndvi<- projectRaster(ndvi, crs=32718)
r = crop(ndvi,extent(mapvald100))
r2 = mask(r, mapvald100)
plot(r2)
pkgs = c("ggplot2","sf","dplyr","cartography","leaflet","rgdal","raster","tmap", "tibble", "terra")
lapply(pkgs, require, character.only = TRUE)
setwd("C:\\Users\\dgcal\\Documents\\Github\\avu_valdivia")
mapvald = st_read("mapvald.shp")
mapvald<-mapvald%>%
mutate(PERSONAS_E = na_if(PERSONAS_E, "Indeterminado"))
mapvald$porcentaje_migr <-
(as.numeric(mapvald$PERSONAS_E)/mapvald$TOTAL_P) * 100
mapvald<-mapvald%>%
mutate(PUEBLOS = na_if(PUEBLOS, "Indeterminado"))
mapvald$porcentaje_ind <-
(as.numeric(mapvald$PUEBLOS)/mapvald$TOTAL_P) * 100
mapvald100<-mapvald%>%
sf::st_buffer(100)
#st_write(mapvald100, "mapvald100.shp", driver = "ESRI Shapefile")
leafsync::latticeview(mapview::mapview(mapvald),
mapview::mapview(mapvald100))
#Se ve bien el buffer
#Seguimos
imagen<-list.files(pattern='*.tif', full.names=TRUE)
bandassep<-brick(stack(imagen)) #esto es por si quiero que el raster tenga hartas capas, por ejemplo, por fecha
plot(bandassep)
ndvi<-(bandassep$B5-bandassep$B4)/(bandassep$B5+bandassep$B4)
plot(ndvi,
main="NDVI Valdivia y Niebla - Septiembre 2020")
#sr<-"proj=utm + zone = 15 + ellps=GRS80 + datum=WGS84 + units=m"
test<- st_transform(mapvald, crs=32718) #32718
test2<- projectRaster(ndvi, crs=32718)
r = crop(test2,extent(test))
r2 = mask(r, test)
plot(r2)
#funcionÃ³!!!
test<- st_transform(mapvald, crs=32718) #32718
test2<- projectRaster(ndvi, crs=32718)
r = crop(test2,extent(test))
r2 = mask(r, test)
plot(r2)
#funcionÃ³!!!
plot(test2)
plot(test)
mapvald100<- st_transform(mapvald100, crs=32718) #32718
ndvi<- projectRaster(ndvi, crs=32718)
#r = crop(ndvi,extent(mapvald100))
#r2 = mask(r, mapvald100)
#plot(r2)
mapvald100<- st_transform(mapvald100, crs=32718) #32718
ndvi<- projectRaster(ndvi, crs=32718)
length(ndvi)
ex <- extract(ndvi, mapvald100, fun=sum, na.rm=TRUE, df=TRUE)
z<-extract(ndvi, mapvald)
View(z)
plot(z)
mapvald<-
mapvald%>%mutate(
ndvimean = extract(ndvi, mapvald, fun = mean, na.rm = TRUE))
View(mapvald)
mapvald<-mapvald%>%rename(ndvi_mean = ndvimean..1.)
mapvald<-mapvald%>%rename(ndvi_mean = ndvimean.. 1.)
mapvald<-mapvald%>%rename("ndvi_mean" = "ndvimean.. 1.")
mapvald<-mapvald%>%rename("ndvi_mean" = "ndvimean..1.")
mapvald<-
mapvald%>%mutate(
ndvimean = extract(ndvi, mapvald, fun = mean, na.rm = TRUE))
ggplot(mapvald, aes(x = "porcentaje_ind", y = "ndvimean")+
geom_point()+
theme_classic())
ggplot(mapvald, aes(x = porcentaje_ind, y = ndvimean)+
geom_point()+
theme_classic())
ggplot(mapvald, aes(x = porcentaje_ind, y = ndvimean))+
geom_point()+
theme_classic()
ggplot(mapvald, aes(x = porcentaje_ind, y = ndvimean, colour=CODIGO_))+
geom_point()+
theme_classic()
ggplot(mapvald, aes(x = porcentaje_ind, y = ndvimean, colour=CODIGO_, group=CODIGO_))+
geom_point()+
theme_classic()
ggplot(mapvald, aes(x = porcentaje_ind, y = ndvimean, colour=CODIGO_, group_by=CODIGO_))+
geom_point()+
theme_classic()
ggplot(mapvald, aes(x = porcentaje_ind, y = ndvimean, colour=NOMBRE_))+
geom_point()+
theme_classic()
ggplot(mapvald, aes(x = porcentaje_ind, y = ndvimean, colour=NOMBRE_))+
geom_point()+
geom_smooth()+
theme_classic()
ggplot(mapvald, aes(x = porcentaje_ind, y = ndvimean, colour=NOMBRE_))+
geom_point()+
geom_line()+
theme_classic()
ggplot(mapvald, aes(x = porcentaje_ind, y = ndvimean, colour=NOMBRE_))+
geom_point()+
geom_smooth(method="lm")+
theme_classic()
ggplot(mapvald, aes(x = porcentaje_ind, y = ndvimean))+
geom_point()+
geom_smooth(method="lm")+
theme_classic()
ggplot(subset(mapvald, !is.na(porcentaje_ind)), aes(x = porcentaje_ind, y = ndvimean))+
geom_point()+
geom_smooth(method="lm")+
theme_classic()
ggplot(mapvald, aes(x = porcentaje_migr, y = ndvimean))+
geom_point()+
geom_smooth(method="lm")+
theme_classic()
ggplot(mapvald, aes(x = porcentaje_ind, y = ndvimean))+
geom_point()+
geom_smooth(method="lm")+
theme_classic()
ggplot(mapvald, aes(x = porcentaje_ind, y = ndvimean))+
geom_point()+
geom_smooth(method="lm")+
theme_classic()
pkgs = c("ggplot2","sf","dplyr","cartography","leaflet","rgdal","raster","tmap", "tibble", "terra")
lapply(pkgs, require, character.only = TRUE)
setwd("C:\\Users\\dgcal\\Documents\\Github\\avu_valdivia")
mapvald = st_read("mapvald.shp")
mapvald<-mapvald%>%
mutate(PERSONAS_E = na_if(PERSONAS_E, "Indeterminado"))
mapvald$porcentaje_migr <-
(as.numeric(mapvald$PERSONAS_E)/mapvald$TOTAL_P) * 100
mapvald<-mapvald%>%
mutate(PUEBLOS = na_if(PUEBLOS, "Indeterminado"))
mapvald$porcentaje_ind <-
(as.numeric(mapvald$PUEBLOS)/mapvald$TOTAL_P) * 100
mapvald100<-mapvald%>%
sf::st_buffer(100)
#st_write(mapvald100, "mapvald100.shp", driver = "ESRI Shapefile")
leafsync::latticeview(mapview::mapview(mapvald),
mapview::mapview(mapvald100))
#Se ve bien el buffer
#Seguimos
imagen<-list.files(pattern='*.tif', full.names=TRUE)
bandassep<-brick(stack(imagen)) #esto es por si quiero que el raster tenga hartas capas, por ejemplo, por fecha
plot(bandassep)
ndvi<-(bandassep$B5-bandassep$B4)/(bandassep$B5+bandassep$B4)
plot(ndvi,
main="NDVI Valdivia y Niebla - Septiembre 2020")
mapvald100<- st_transform(mapvald100, crs=32718) #32718
ndvi<- projectRaster(ndvi, crs=32718)
save.image("~/GitHub/avu_valdivia/env.RData")
mapvald<-
mapvald%>%mutate(
ndvimean = extract(ndvi, mapvald, fun = mean, na.rm = TRUE))
ggplot(mapvald, aes(x = porcentaje_ind, y = ndvimean))+
geom_point()+
geom_smooth(method="lm")+
theme_classic()
save.image("~/GitHub/avu_valdivia/env.RData")
View(ndvi)
summary(ndvi)
str(ndvi)
summary(ndvi)
avu03 <- (function(x){x[x<0.3]<- 0; return(x)})
fun03 <- (function(x){x[x<0.3]<- 0; return(x)})
rm(avu03)
avu03 <- calc(ndvi, fun03)
plot(avu03,
main="AVU Valdivia y Niebla - Septiembre 2020")
fun03 <- (function(x){x[x<0.3]<- 0; return(x)}+
function(x){x[x>=0.3]<- 1; return(x)})
avu03 <- calc(ndvi, fun03)
plot(avu03,
main="AVU Valdivia y Niebla - Septiembre 2020")
fun03 <- (function(x){x[x<0.3]<- 0; return(x)}+{x[x>=0.3]<- 1; return(x)})
avu03 <- calc(ndvi, fun03)
plot(avu03,
main="AVU Valdivia y Niebla - Septiembre 2020")
fun03 <- (function(x){x[x<0.3]<- 0; return(x)}AND{x[x>=0.3]<- 1; return(x)})
fun03b <- (function(x){x[x>=0.3]<- 1; return(x)})
avu03 <- calc(ndvi, fun03a + fun03b)
fun03a <- (function(x){x[x<0.3]<- 0; return(x)}+function(x){x[x>=0.3]<- 1; return(x)})
fun03 <- (function(x){x[x<0.3]<- 0; return(x)}+function(x){x[x>=0.3]<- 1; return(x)})
avu03 <- calc(ndvi, fun03)
plot(avu03,
main="AVU Valdivia y Niebla - Septiembre 2020")
load("~/GitHub/avu_valdivia/env.RData")
fun03 <- (function(x){x[x<0.3]<- 0; function(x){x[x>=0.3]<- 1return(x)}+; return(x)})
fun03 <- (function(x){x[x<0.3]<- 0; x[x>=0.3]<- 1 ; return(x)})
avu03 <- calc(ndvi, fun03)
pkgs = c("ggplot2","sf","dplyr","cartography","leaflet","rgdal","raster","tmap", "tibble", "terra")
lapply(pkgs, require, character.only = TRUE)
avu03 <- calc(ndvi, fun03)
plot(avu03,
main="AVU Valdivia y Niebla - Septiembre 2020")
fun035 <- (function(x){x[x<0.35]<- 0; x[x>=0.35]<- 1 ; return(x)})
avu035 <- calc(ndvi, fun035)
plot(avu03,
main="AVU Valdivia y Niebla - Septiembre 2020 (NDVI >= 0.35)")
fun035 <- (function(x){x[x<0.35]<- 0; x[x>=0.35]<- 1 ; return(x)})
avu035 <- calc(ndvi, fun035)
plot(avu035,
main="AVU Valdivia y Niebla - Septiembre 2020 (NDVI >= 0.35)")
mapvald<-
mapvald%>%mutate(
avu03 = extract(avu03, mapvald, fun = mean, na.rm = TRUE))
mapvald<-
mapvald%>%mutate(
avu035 = extract(avu035, mapvald, fun = mean, na.rm = TRUE))
mapvald<-
mapvald%>%mutate(
avu03 = extract(avu03, mapvald, fun = NULL, na.rm = TRUE))
mapvald<-
mapvald%>%mutate(
avu03 = raster::extract(avu03, mapvald, fun = NULL, na.rm = TRUE))
mapvald<-
mapvald%>%mutate(
avu03 = sf::extract(avu03, mapvald, fun = NULL, na.rm = TRUE))
mapvald<-
mapvald%>%mutate(
avu03 = extract(avu03, mapvald, fun = mean, na.rm = TRUE))
setwd("C:\\Users\\dgcal\\Documents\\Github\\avu_valdivia")
setwd("~/GitHub/avu_valdivia")
