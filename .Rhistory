main="NDVI Valdivia y Niebla - Septiembre 2020")
hist(ndvi,
main = "NDVI: Distribución de los pixeles VALDIVIA/NIEBLA Sept 2020",
col = "springgreen",
xlab = "valores del NDVI")
r = crop(ndvi, mapvald)
test<- st_transform(mapvald, crs=32718) #32718
test2<- projectRaster(ndvi, crs=32718)
r = crop(test2,extent(test))
r2 = mask(r, test)
plot(r2)
#funcionó!!!
mapvald<-
mapvald%>%mutate(
ndvimean = extract(ndvi, mapvald, fun = mean, na.rm = TRUE))
ggplot(mapvald, aes(x = porcentaje_ind, y = ndvimean))+
geom_point()+
geom_smooth(method="lm")+
theme_classic()
fun03 <- (function(x){x[x<0.3]<- 0; x[x>=0.3]<- 1 ; return(x)})
avu03 <- calc(ndvi, fun03)
plot(avu03,
main="AVU Valdivia y Niebla - Septiembre 2020")
fun035 <- (function(x){x[x<0.35]<- 0; x[x>=0.35]<- 1 ; return(x)})
avu035 <- calc(ndvi, fun035)
plot(avu035,
main="AVU Valdivia y Niebla - Septiembre 2020 (NDVI >= 0.35)")
mapvald<-
mapvald%>%mutate(
avu03 = extract(avu03, mapvald, fun = NULL, na.rm = TRUE))
ggplot(mapvald, aes(x = porcentaje_ind, y = avu03))+
geom_point()+
geom_smooth(method="lm")+
theme_classic()
View(mapvald)
mapvald<-
mapvald%>%mutate(
avu03 = extract(avu03, mapvald, fun = mean, na.rm = TRUE))
mapvald<-
mapvald%>%mutate(
avu035 = extract(avu035, mapvald, fun = mean, na.rm = TRUE))
ggplot(mapvald, aes(x = porcentaje_ind, y = avu035))+
geom_point()+
geom_smooth(method="lm")+
theme_classic()
save.image("~/GitHub/avu_valdivia/env.RData")
load("~/GitHub/avu_valdivia/env.RData")
pkgs = c("ggplot2","sf","dplyr","cartography","leaflet","rgdal","raster","tmap", "tibble", "terra")
lapply(pkgs, require, character.only = TRUE)
mapvald<-
mapvald%>%mutate(
avu03 = extract(avu03, mapvald, fun = mean, buffer=100, na.rm = TRUE))
setwd("~/GitHub/avu_valdivia")
mapvald<-
mapvald%>%mutate(
avu03 = extract(avu03, mapvald, fun = mean, buffer=100, na.rm = TRUE))
load("~/GitHub/avu_valdivia/env.RData")
load("~/GitHub/avu_valdivia/env.RData")
setwd("~/GitHub/avu_valdivia")
pkgs = c("ggplot2","sf","dplyr","cartography","leaflet","rgdal","raster","tmap", "tibble", "terra")
lapply(pkgs, require, character.only = TRUE)
mapvald<-
mapvald%>%mutate(
avu03 = extract(avu03, mapvald, fun = mean, buffer=100, na.rm = TRUE))
load("~/GitHub/avu_valdivia/env.RData")
pkgs = c("ggplot2","sf","dplyr","cartography","leaflet","rgdal","raster","tmap", "tibble", "terra")
lapply(pkgs, require, character.only = TRUE)
setwd("~/GitHub/avu_valdivia")
View(mapvald)
setwd("C:\\Users\\dgcal\\Documents\\Github\\avu_valdivia")
mapvald = st_read("mapvald.shp")
mapvald<-mapvald%>%
mutate(PERSONAS_E = na_if(PERSONAS_E, "Indeterminado"))
mapvald$porcentaje_migr <-
(as.numeric(mapvald$PERSONAS_E)/mapvald$TOTAL_P) * 100
mapvald<-mapvald%>%
mutate(PUEBLOS = na_if(PUEBLOS, "Indeterminado"))
mapvald$porcentaje_ind <-
(as.numeric(mapvald$PUEBLOS)/mapvald$TOTAL_P) * 100
imagen<-list.files(pattern='*.tif', full.names=TRUE)
bandassep<-brick(stack(imagen)) #esto es por si quiero que el raster tenga hartas capas, por ejemplo, por fecha
plot(bandassep)
ndvi<-(bandassep$B5-bandassep$B4)/(bandassep$B5+bandassep$B4)
plot(ndvi,
main="NDVI Valdivia y Niebla - Septiembre 2020")
mapvald100<- st_transform(mapvald100, crs=32718) #32718
mapvald<- st_transform(mapvald, crs=32718) #32718
ndvi<- projectRaster(ndvi, crs=32718)
fun03 <- (function(x){x[x<0.3]<- 0; x[x>=0.3]<- 1 ; return(x)})
avu03 <- calc(ndvi, fun03)
plot(avu03,
main="AVU Valdivia y Niebla - Septiembre 2020")
fun035 <- (function(x){x[x<0.35]<- 0; x[x>=0.35]<- 1 ; return(x)})
avu035 <- calc(ndvi, fun035)
plot(avu035,
main="AVU Valdivia y Niebla - Septiembre 2020 (NDVI >= 0.35)")
mapvald<-
mapvald%>%mutate(
avu03 = extract(avu03, mapvald, fun = mean, buffer=100, na.rm = TRUE))
mapvald<-
mapvald%>%mutate(
avu035 = extract(avu035, mapvald, fun = mean, buffer=100, na.rm = TRUE))
#PENDIENTE, NECESITO EXTRAER EL VALOR SUM/TOTAL DE CADA POLÍGONO
ggplot(mapvald, aes(x = porcentaje_ind, y = avu035))+
geom_point()+
geom_smooth(method="lm")+
theme_classic()
ggplot(mapvald, aes(x = porcentaje_ind, y = avu035))+
geom_point()+
geom_smooth(method="lm")+
ggtitle("Relación entre el % de personas que se identifican como indígenas y el PROMEDIO de AVU (NDVI > 0.35) a 100m de cada manzana censal")
theme_classic()
mapvald100<-mapvald%>%
sf::st_buffer(100)
mapvald<- st_transform(mapvald, crs=32718) #32718
ndvi<- projectRaster(ndvi, crs=32718)
r = crop(ndvi,extent(mapvald))
r2 = mask(r, mapvald)
plot(r2)
hist(r2,
main = "NDVI: Distribución de los pixeles VALDIVIA/NIEBLA Sept 2020",
col = "springgreen",
xlab = "valores del NDVI")
save.image("~/GitHub/avu_valdivia/env.RData")
unlink("Valdivia_cache", recursive = TRUE)
setwd("C:\\Users\\dgcal\\Documents\\Github\\avu_valdivia")
mapvald = st_read("mapvald.shp")
pkgs = c("ggplot2","sf","dplyr","cartography","leaflet","rgdal","raster","tmap", "tibble", "terra")
lapply(pkgs, require, character.only = TRUE)
setwd("C:\\Users\\dgcal\\Documents\\Github\\avu_valdivia")
mapvald = st_read("mapvald.shp")
ggplot(mapvald, aes(x = porcentaje_ind, y = avu035))+
geom_point()+
geom_smooth(method="lm")+
ggtitle("Relación entre el % de personas que se identifican como indígenas y el PROMEDIO de AVU (NDVI > 0.35) a 100m de cada manzana censal")
pkgs = c("ggplot2","sf","dplyr","cartography","leaflet","rgdal","raster","tmap", "tibble", "terra")
lapply(pkgs, require, character.only = TRUE)
setwd("C:\\Users\\dgcal\\Documents\\Github\\avu_valdivia")
mapvald = st_read("mapvald.shp")
mapvald<-mapvald%>%
mutate(PERSONAS_E = na_if(PERSONAS_E, "Indeterminado"))
mapvald$porcentaje_migr <-
(as.numeric(mapvald$PERSONAS_E)/mapvald$TOTAL_P) * 100
mapvald<-mapvald%>%
mutate(PUEBLOS = na_if(PUEBLOS, "Indeterminado"))
mapvald$porcentaje_ind <-
(as.numeric(mapvald$PUEBLOS)/mapvald$TOTAL_P) * 100
mapvald100<-mapvald%>%
sf::st_buffer(100)
ndvi<-(bandassep$B5-bandassep$B4)/(bandassep$B5+bandassep$B4)
imagen<-list.files(pattern='*.tif', full.names=TRUE)
bandassep<-brick(stack(imagen)) #esto es por si quiero que el raster tenga hartas capas, por ejemplo, por fecha
plot(bandassep)
ndvi<-(bandassep$B5-bandassep$B4)/(bandassep$B5+bandassep$B4)
plot(ndvi,
main="NDVI Valdivia y Niebla - Septiembre 2020")
hist(ndvi,
main = "NDVI: Distribución de los pixeles VALDIVIA/NIEBLA Sept 2020",
col = "springgreen",
xlab = "valores del NDVI")
mapvald<- st_transform(mapvald, crs=32718) #32718
ndvi<- projectRaster(ndvi, crs=32718)
r = crop(ndvi,extent(mapvald))
r2 = mask(r, mapvald)
plot(r2)
hist(r2,
main = "NDVI: Distribución de los pixeles VALDIVIA/NIEBLA Sept 2020",
col = "springgreen",
xlab = "valores del NDVI")
fun03 <- (function(x){x[x<0.3]<- 0; x[x>=0.3]<- 1 ; return(x)})
avu03 <- calc(ndvi, fun03)
plot(avu03,
main="AVU Valdivia y Niebla - Septiembre 2020")
fun035 <- (function(x){x[x<0.35]<- 0; x[x>=0.35]<- 1 ; return(x)})
avu035 <- calc(ndvi, fun035)
plot(avu035,
main="AVU Valdivia y Niebla - Septiembre 2020 (NDVI >= 0.35)")
mapvald<-
mapvald%>%mutate(
avu03 = extract(avu03, mapvald, fun = mean, buffer=100, na.rm = TRUE))
mapvald<-
mapvald%>%mutate(
avu035 = extract(avu035, mapvald, fun = mean, buffer=100, na.rm = TRUE))
#PENDIENTE, NECESITO EXTRAER EL VALOR SUM/TOTAL DE CADA POLÍGONO
ggplot(mapvald, aes(x = porcentaje_ind, y = avu035))+
geom_point()+
geom_smooth(method="lm")+
ggtitle("Relación entre el % de personas que se identifican como indígenas y el PROMEDIO de AVU (NDVI > 0.35) a 100m de cada manzana censal")
theme_classic()
ggplot(mapvald, aes(x = porcentaje_migr, y = avu035))+
geom_point()+
geom_smooth(method="lm")+
ggtitle("Relación entre el % de personas migrantes y el PROMEDIO de AVU (NDVI > 0.35) a 100m de cada manzana censal")
theme_classic()
ggplot(mapvald, aes(x = porcentaje_ind, y = avu03))+
geom_point()+
geom_smooth(method="lm")+
ggtitle("Relación entre el % de personas indígenas y el PROMEDIO de AVU (NDVI > 0.3) a 100m de cada manzana censal")
theme_classic()
ggplot(mapvald, aes(x = porcentaje_ind, y = avu03))+
geom_point()+
geom_smooth(method="lm")+
ggtitle("Relación entre el % de personas indígenas y el PROMEDIO de AVU (NDVI > 0.3) a 100m de cada manzana censal")
theme_classic()
load("~/GitHub/avu_valdivia/env.RData")
pkgs = c("ggplot2","sf","dplyr","cartography","leaflet","rgdal","raster","tmap", "tibble", "terra")
lapply(pkgs, require, character.only = TRUE)
setwd("~/GitHub/avu_valdivia")
mapvald<-mapvald%>%
mutate(PERSONAS_E = na_if(PERSONAS_E, "Indeterminado"))
setwd("C:\\Users\\dgcal\\Documents\\Github\\avu_valdivia")
mapvald = st_read("mapvald.shp")
mapvald<-mapvald%>%
mutate(PERSONAS_E = na_if(PERSONAS_E, "Indeterminado"))
mapvald$porcentaje_migr <-
(as.numeric(mapvald$PERSONAS_E)/mapvald$TOTAL_P) * 100
mapvald<-mapvald%>%
mutate(PUEBLOS = na_if(PUEBLOS, "Indeterminado"))
mapvald$porcentaje_ind <-
(as.numeric(mapvald$PUEBLOS)/mapvald$TOTAL_P) * 100
mapvald100<-mapvald%>%
sf::st_buffer(100)
imagen<-list.files(pattern='*.tif', full.names=TRUE)
bandassep<-brick(stack(imagen)) #esto es por si quiero que el raster tenga hartas capas, por ejemplo, por fecha
plot(bandassep)
ndvi<-(bandassep$B5-bandassep$B4)/(bandassep$B5+bandassep$B4)
plot(ndvi,
main="NDVI Valdivia y Niebla - Septiembre 2020")
hist(ndvi,
main = "NDVI: Distribución de los pixeles VALDIVIA/NIEBLA Sept 2020",
col = "springgreen",
xlab = "valores del NDVI")
mapvald<- st_transform(mapvald, crs=32718) #32718
ndvi<- projectRaster(ndvi, crs=32718)
r = crop(ndvi,extent(mapvald))
r2 = mask(r, mapvald)
plot(r2)
hist(r2,
main = "NDVI: Distribución de los pixeles VALDIVIA/NIEBLA Sept 2020",
col = "springgreen",
xlab = "valores del NDVI")
fun03 <- (function(x){x[x<0.3]<- 0; x[x>=0.3]<- 1 ; return(x)})
avu03 <- calc(ndvi, fun03)
plot(avu03,
main="AVU Valdivia y Niebla - Septiembre 2020")
fun035 <- (function(x){x[x<0.35]<- 0; x[x>=0.35]<- 1 ; return(x)})
avu035 <- calc(ndvi, fun035)
plot(avu035,
main="AVU Valdivia y Niebla - Septiembre 2020 (NDVI >= 0.35)")
mapvald<-
mapvald%>%mutate(
avu03 = terra::extract(avu03, mapvald, fun = sum, buffer=100, na.rm = TRUE, cells = TRUE))
mapvald<-
mapvald%>%mutate(
avu035 = terra:extract(avu035, mapvald, fun = sum, buffer=100, na.rm = TRUE, cells = TRUE))
mapvald<-
mapvald%>%mutate(
avu035 = terra::extract(avu035, mapvald, fun = sum, buffer=100, na.rm = TRUE, cells = TRUE))
View(mapvald)
View(mapvald100)
View(mapvald[[64]][[1]])
View(mapvald[[64]][[2]])
ggplot(mapvald, aes(x = porcentaje_ind, y = avu035/cells))+
geom_point()+
geom_smooth(method="lm")+
ggtitle("Relación entre el % de personas que se identifican como indígenas y el PROMEDIO de AVU (NDVI > 0.35) a 100m de cada manzana censal")
ggplot(mapvald, aes(x = porcentaje_ind, y = (avu035/cells)))+
geom_point()+
geom_smooth(method="lm")+
ggtitle("Relación entre el % de personas que se identifican como indígenas y el PROMEDIO de AVU (NDVI > 0.35) a 100m de cada manzana censal")
ggplot(mapvald, aes(x = porcentaje_ind, y = "avu035/cells"))+
geom_point()+
geom_smooth(method="lm")+
ggtitle("Relación entre el % de personas que se identifican como indígenas y el PROMEDIO de AVU (NDVI > 0.35) a 100m de cada manzana censal")
mapvald<-
mapvald%>%mutate(
avu03 = terra::extract(avu03, mapvald, fun = sum, buffer=100, na.rm = TRUE, cells(avu03,mapvald)))
= TRUE
mapvald<-
mapvald%>%mutate(
avu03 = terra::extract(avu03, mapvald, fun = sum, buffer=100, na.rm = TRUE, cells = TRUE))
ggplot(mapvald, aes(x = porcentaje_ind, y = avu035))+
geom_point()+
geom_smooth(method="lm")+
ggtitle("Relación entre el % de personas que se identifican como indígenas y el PROMEDIO de AVU (NDVI > 0.35) a 100m de cada manzana censal")
theme_classic()
load("~/GitHub/avu_valdivia/env.RData")
pkgs = c("ggplot2","sf","dplyr","cartography","leaflet","rgdal","raster","tmap", "tibble", "terra")
lapply(pkgs, require, character.only = TRUE)
setwd("C:\\Users\\dgcal\\Documents\\Github\\avu_valdivia")
mapvald = st_read("mapvald.shp")
mapvald<-mapvald%>%
mutate(PERSONAS_E = na_if(PERSONAS_E, "Indeterminado"))
mapvald$porcentaje_migr <-
(as.numeric(mapvald$PERSONAS_E)/mapvald$TOTAL_P) * 100
mapvald<-mapvald%>%
mutate(PUEBLOS = na_if(PUEBLOS, "Indeterminado"))
mapvald$porcentaje_ind <-
(as.numeric(mapvald$PUEBLOS)/mapvald$TOTAL_P) * 100
mapvald100<-mapvald%>%
sf::st_buffer(100)
imagen<-list.files(pattern='*.tif', full.names=TRUE)
bandassep<-brick(stack(imagen)) #esto es por si quiero que el raster tenga hartas capas, por ejemplo, por fecha
plot(bandassep)
ndvi<-(bandassep$B5-bandassep$B4)/(bandassep$B5+bandassep$B4)
plot(ndvi,
main="NDVI Valdivia y Niebla - Septiembre 2020")
mapvald<- st_transform(mapvald, crs=32718) #32718
ndvi<- projectRaster(ndvi, crs=32718)
fun03 <- (function(x){x[x<0.3]<- 0; x[x>=0.3]<- 1 ; return(x)})
avu03 <- calc(ndvi, fun03)
plot(avu03,
main="AVU Valdivia y Niebla - Septiembre 2020")
fun035 <- (function(x){x[x<0.35]<- 0; x[x>=0.35]<- 1 ; return(x)})
avu035 <- calc(ndvi, fun035)
plot(avu035,
main="AVU Valdivia y Niebla - Septiembre 2020 (NDVI >= 0.35)")
View(mapvald)
buffer::extract
raster::extract
showMethods(extract)
install.packages("extractextractr")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
update.packages("rlang")
devtools::install_github(repo = "r-lib/devtools",
dependencies = TRUE,
upgrade = TRUE)```
devtools::install_github(repo = "r-lib/devtools",
dependencies = TRUE,
upgrade = TRUE)
library(remotes)
devtools::install_github(repo = "r-lib/devtools",
dependencies = TRUE,
upgrade = TRUE)
remotes::install_github(repo = "r-lib/devtools",
dependencies = TRUE,
upgrade = TRUE)
remotes::install_github(isciences/exactextractr)
remotes::install_github("isciences/exactextractr")
pkgbuild::check_build_tools(debug=TRUE)
mapvald<-
mapvald%>%mutate(
avu03 = terra::extract(avu03, mapvald, fun = sum, buffer=100, na.rm = TRUE))
pkgs = c("ggplot2","sf","dplyr","cartography","leaflet","rgdal","raster","tmap", "tibble", "terra")
lapply(pkgs, require, character.only = TRUE)
mapvald<-
mapvald%>%mutate(
avu03 = terra::extract(avu03, mapvald, fun = sum, buffer=100, na.rm = TRUE))
mapvald<-
mapvald%>%mutate(
avu035 = terra::extract(avu035, mapvald, fun = sum, buffer=100, na.rm = TRUE))
lengths(mapvald)
View(mapvald)
pkgs = c("ggplot2","sf","dplyr","cartography","leaflet","rgdal","raster","tmap", "tibble", "terra")
lapply(pkgs, require, character.only = TRUE)
setwd("C:\\Users\\dgcal\\Documents\\Github\\avu_valdivia")
mapvald = st_read("mapvald.shp")
View(mapvald)
mapvald <- mapvald[,-56]
mapvald <- mapvald[,-56]
mapvald<-mapvald%>%
mutate(PERSONAS_E = na_if(PERSONAS_E, "Indeterminado"))
library(dplyr)
library(ggplot2)
pkgs = c("ggplot2","sf","dplyr","cartography","leaflet","rgdal","raster","tmap", "tibble", "terra")
lapply(pkgs, require, character.only = TRUE)
library(tibble)
library(ggplot2)
library(ggplot2)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(ggplot2)
remove.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(ggplot2)
pkgs = c("ggplot2","sf","dplyr","cartography","leaflet","rgdal","raster","tmap", "tibble", "terra")
lapply(pkgs, require, character.only = TRUE)
mapvald<-mapvald%>%
mutate(PERSONAS_E = na_if(PERSONAS_E, "Indeterminado"))
mapvald$porcentaje_migr <-
(as.numeric(mapvald$PERSONAS_E)/mapvald$TOTAL_P) * 100
mapvald<-mapvald%>%
mutate(PUEBLOS = na_if(PUEBLOS, "Indeterminado"))
mapvald$porcentaje_ind <-
(as.numeric(mapvald$PUEBLOS)/mapvald$TOTAL_P) * 100
mapvald100<-mapvald%>%
sf::st_buffer(100)
imagen<-list.files(pattern='*.tif', full.names=TRUE)
bandassep<-brick(stack(imagen)) #esto es por si quiero que el raster tenga hartas capas, por ejemplo, por fecha
plot(bandassep)
ndvi<-(bandassep$B5-bandassep$B4)/(bandassep$B5+bandassep$B4)
plot(ndvi,
main="NDVI Valdivia y Niebla - Septiembre 2020")
mapvald<- st_transform(mapvald, crs=32718) #32718
ndvi<- projectRaster(ndvi, crs=32718)
fun03 <- (function(x){x[x<0.3]<- 0; x[x>=0.3]<- 1 ; return(x)})
avu03 <- calc(ndvi, fun03)
plot(avu03,
main="AVU Valdivia y Niebla - Septiembre 2020")
fun035 <- (function(x){x[x<0.35]<- 0; x[x>=0.35]<- 1 ; return(x)})
avu035 <- calc(ndvi, fun035)
plot(avu035,
main="AVU Valdivia y Niebla - Septiembre 2020 (NDVI >= 0.35)")
?extract
mapvald<-
mapvald%>%mutate(
avu03 = terra::extract(avu03, mapvald, fun = sum, buffer=100, na.rm = TRUE))
mapvald<-
mapvald%>%mutate(
avu035 = terra::extract(avu035, mapvald, fun = sum, buffer=100, na.rm = TRUE))
View(mapvald)
ncells(mapvald)
ncol(mapvald)
ncol(avu03)
ncol(avu03, ncells)
install.packages("spatialEco")
library(spatialEco)
?zonal.stats
zonal.stats(mapvald, avu03, stats="counter")
install.packages("exactextractr")
library(exactextractr)
zonal.stats(mapvald, avu03, stats="counter")
?exact_extract
exact_extract(avu03, mapvald100, function(values, coverage_fraction)
sum(coverage_fraction()))
exact_extract(avu03, mapvald100, function(values, coverage_fraction)
sum(coverage_fraction))
exact_extract(avu03, mapvald100, fun=count)
exact_extract(avu03, mapvald100, fun="count")
exact_extract(avu03, mapvald100, fun="sum")
test<-exact_extract(avu03, mapvald100, fun="sum")
test
test<-exact_extract(avu03, mapvald100, "sum")
test
test<-exact_extract(avu03, mapvald100, "count")
test
test<-exact_extract(avu03, mapvald100, "max")
test
test<-exact_extract(avu03, mapvald100, "mean")
test
test<-exact_extract(avu03, mapvald100, "min")
test
test<-exact_extract(avu03, mapvald100, "sum")
test
test<-exact_extract(avu035, mapvald100, "weighted_sum")
test<-exact_extract(avu035, mapvald100, "sum")
test
View(mapvald100)
test<-
mapvald100%>%mutate(
avu035=exact_extract(avu035, mapvald100, "sum"))
test
View(test)
ggplot(test, aes(x = porcentaje_ind, y = avu035))+
geom_point()+
geom_smooth(method="lm")+
ggtitle("Relación entre el % de personas que se identifican como indígenas y el PROMEDIO de AVU (NDVI > 0.35) a 100m de cada manzana censal")
theme_classic()
ggplot(test, aes(x = porcentaje_migr, y = avu035))+
geom_point()+
geom_smooth(method="lm")+
ggtitle("Relación entre el % de personas que se identifican como indígenas y el PROMEDIO de AVU (NDVI > 0.35) a 100m de cada manzana censal")
theme_classic()
ggplot(mapvald, aes(x = porcentaje_migr, y = avu03))+
geom_point()+
geom_smooth(method="lm")+
ggtitle("Relación entre el % de personas indígenas y el PROMEDIO de AVU (NDVI > 0.3) a 100m de cada manzana censal")
theme_classic()
mapvald100<-
mapvald100%>%mutate(
avu035=exact_extract(avu035, mapvald100, "sum"))
View(mapvald100)
View(test)
mapvald100<-
mapvald100%>%mutate(
avu03=exact_extract(avu03, mapvald100, "sum"))
View(mapvald100)
View(mapvald)
library(censo2017)
df<-DBI::dbGetQuery(
censo_conectar(),
'SELECT DISTINCT
z.geocodigo,
v.vivienda_ref_id,
v.ind_hacin_rec,
v.ind_material,
h.hogar_ref_id,
p.personan,
p.escolaridad
FROM
zonas AS z,
viviendas AS v,
hogares AS h,
personas AS p
WHERE
z.geocodigo LIKE \'141011%\'
AND
z.zonaloc_ref_id = v.zonaloc_ref_id
AND
v.vivienda_ref_id = h.vivienda_ref_id
AND
h.hogar_ref_id = p.hogar_ref_id
AND
p.personan = 1')
View(df)
View(mapvald)
